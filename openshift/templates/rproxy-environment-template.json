{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "rproxy",
    "creationTimestamp": null
  },
  "objects": [
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "creationTimestamp": null,
        "labels": {
          "app": "${NAME}"
        },
        "annotations": {
          "description": "Defines how to deploy the reverse proxy server"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling",
          "rollingParams": {
            "updatePeriodSeconds": 1,
            "intervalSeconds": 1,
            "timeoutSeconds": 600,
            "maxUnavailable": "25%",
            "maxSurge": "25%"
          },
          "resources": {}
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${APP_IMAGE_NAMESPACE}",
                "name": "${APP_IMAGE_NAME}:${APP_DEPLOYMENT_TAG}"
              }
            }
          }
        ],
        "replicas": 2,
        "test": false,
        "selector": {
          "app": "${NAME}",
          "deploymentconfig": "${NAME}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "app": "${NAME}",
              "deploymentconfig": "${NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${NAME}",
                "image": "",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "imagePullPolicy": "Always",
                "env": [
                  {
                    "name": "NGINX_PROXY_HOST",
                    "value": "${NGINX_PROXY_HOST}"
                  },
                  {
                    "name": "NGINX_PROXY_URL",
                    "value": "${NGINX_PROXY_URL}"
                  },
                  {
                    "name": "HTTP_API_DEPLOY_CONFIG",
                    "value": "${HTTP_API_DEPLOY_CONFIG}"
                  },
                  {
                    "name": "NGINX_EXPORT_URL",
                    "value": "${NGINX_EXPORT_URL}"
                  },
                  {
                    "name": "HTTP_API_EXPORT_DEPLOY_CONFIG",
                    "value": "${HTTP_API_EXPORT_DEPLOY_CONFIG}"
                  },
                  {
                    "name": "NGINX_GEOCODER_URL",
                    "value": "${NGINX_GEOCODER_URL}"
                  },
                  {
                    "name": "NGINX_GEOCODER_API_KEY",
                    "value": "${NGINX_GEOCODER_API_KEY}"
                  },
                  {
                    "name": "HTTP_API_GEOCODER_DEPLOY_CONFIG",
                    "value": "${HTTP_API_GEOCODER_DEPLOY_CONFIG}"
                  },
                  {
                    "name": "NGINX_PROXY_URL_PUBLIC",
                    "value": "${NGINX_PROXY_URL_PUBLIC}"
                  },
                  {
                    "name": "NGINX_PROXY_EGUIDE",
                    "value": "${NGINX_PROXY_EGUIDE}"
                  },
                  {
                    "name": "HTTP_BASIC",
                    "value": "${HTTP_BASIC}"
                  },
                  {
                    "name": "USERNAME",
                    "value": "${USERNAME}"
                  },
                  {
                    "name": "PASSWORD",
                    "value": "${PASSWORD}"
                  },
                  {
                    "name": "USERNAME1",
                    "value": "${USERNAME1}"
                  },
                  {
                    "name": "PASSWORD1",
                    "value": "${PASSWORD1}"
                  },
                  {
                    "name": "HTTP_BASIC1",
                    "value": "${HTTP_BASIC1}"
                  }
                ]
              }
            ],
            "restartPolicy": "Always",
            "terminationGracePeriodSeconds": 30,
            "dnsPolicy": "ClusterFirst",
            "securityContext": {}
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "creationTimestamp": null,
        "labels": {
          "app": "${NAME}"
        },
        "annotations": {
          "description": "Exposes and load balances the application pods"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "8080-tcp",
            "protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          }
        ],
        "selector": {
          "app": "${NAME}",
          "deploymentconfig": "${NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "creationTimestamp": null,
        "labels": {
          "app": "${NAME}"
        },
        "annotations": {
          "openshift.io/host.generated": "true"
        }
      },
      "spec": {
        "host": "${APPLICATION_DOMAIN}",
        "to": {
          "kind": "Service",
          "name": "${NAME}",
          "weight": 100
        },
        "port": {
          "targetPort": "8080-tcp"
        },
        "tls": {
          "termination": "edge",
          "insecureEdgeTerminationPolicy": "Redirect"
        }
      }
    }
  ],
  "parameters": [
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the frontend objects defined in this template.",
      "required": true
    },
    {
      "name": "APPLICATION_DOMAIN",
      "displayName": "Application Hostname",
      "description": "The exposed hostname that will route to the service, if left blank a value will be defaulted.",
      "required": true
    },
    {
      "name": "APP_IMAGE_NAME",
      "displayName": "Application image name.",
      "description": "Application image name.",
      "value": "rproxy",
      "required": true
    },
    {
      "name": "APP_IMAGE_NAMESPACE",
      "displayName": "Namespace containing application images.",
      "description": "Namespace containing application images.",
      "required": true
    },
    {
      "name": "APP_DEPLOYMENT_TAG",
      "displayName": "Image tag to watch for changes and trigger deployment.",
      "description": "Image tag to watch for changes and trigger deployment.",
      "value": "latest",
      "required": true
    },
    {
      "name": "NGINX_PROXY_HOST",
      "displayName": "Nginx Proxy Host",
      "description": "The HTTP Header Host value we want to give to the downstream HTTP server",
      "required": true
    },
    {
      "name": "NGINX_PROXY_URL",
      "displayName": "Host that receives incoming web requests",
      "description": "The default URL to use when proxying requests to the application's API.",
      "required": true
    },
    {
      "name": "HTTP_API_DEPLOY_CONFIG",
      "displayName": "A way to inject Nginx params into the config",
      "description": ""
    },
    {
      "name": "NGINX_EXPORT_URL",
      "displayName": "Geo Export Service location",
      "description": "The default URL to use when proxying requests to the GEO-DATA-EXPORT microservice.",
      "required": true
    },
    {
      "name": "HTTP_API_EXPORT_DEPLOY_CONFIG",
      "displayName": "A way to inject Nginx params into the config",
      "description": ""
    },
    {
      "name": "NGINX_GEOCODER_URL",
      "displayName": "Geocoder Service location",
      "description": "The default URL to use when proxying requests to the GEOCODER microservice.",
      "required": true
    },
    {
      "name": "NGINX_GEOCODER_API_KEY",
      "displayName": "The API Key to authenticate against the GEOCODER microservice",
      "description": ""
    },
    {
      "name": "HTTP_API_GEOCODER_DEPLOY_CONFIG",
      "displayName": "A way to inject nginx params into the config",
      "description": ""
    },
    {
      "name": "NGINX_PROXY_URL_PUBLIC",
      "displayName": "Host that receives incoming www.* requests",
      "description": "The default URL to use when proxying requests to the PUBLIC microservice (MMTI).",
      "required": true
    },
    {
      "name": "NGINX_PROXY_EGUIDE",
      "displayName": "EGUIDE Service location",
      "description": "The HTTP Header Host value we want to give to the downstream HTTP server",
      "required": true
    },
    {
      "name": "HTTP_BASIC",
      "displayName": "HTTP Basic Nginx Config Line",
      "description": "For very simple HTTP Basic authentication, use HTTP_BASIC in your nginx config and provide the value here that you want in nginx config, e.g., auth_basic 'restricted'"
    },
    {
      "name": "USERNAME",
      "displayName": "HTTP Basic Username",
      "description": "For very simple HTTP Basic authentication, the username of the ONE user"
    },
    {
      "name": "PASSWORD",
      "displayName": "HTTP Basic Password",
      "description": "For very simple HTTP Basic authentication, the password of the ONE user"
    },
    {
      "name": "USERNAME1",
      "displayName": "HTTP Basic Username",
      "description": "For very simple HTTP Basic authentication, the username of the ONE user"
    },
    {
      "name": "PASSWORD1",
      "displayName": "HTTP Basic Password",
      "description": "For very simple HTTP Basic authentication, the password of the ONE user"
    },
    {
      "name": "HTTP_BASIC1",
      "displayName": "HTTP Basic Nginx Config Line",
      "description": "For very simple HTTP Basic authentication, use HTTP_BASIC1 in your nginx config and provide the value here that you want in nginx config, e.g., auth_basic 'restricted'"
    }
  ]
}
